(declare-fun |b7[typeInv:U_2_bool]| () Bool)
(declare-fun |b92[PivotBetreeidfy.257:42]| () Bool)
(declare-fun |b91[PivotBetreeidfy.257:50]| () Bool)
(declare-fun |b61[PivotBetreeidfy.81:14]| () Bool)
(declare-fun |b115[]| () Bool)
(declare-fun |b120[]| () Bool)
(declare-fun |b39[DafnyPreludebpl.1414:30]| () Bool)
(declare-fun |b27[funType:Seq#Index]| () Bool)
(declare-fun |b56[funType:PivotBetree.BetreeNode.MyDomain]| () Bool)
(declare-fun |b67[PivotBetreeidfy.223:14!1438]| () Bool)
(declare-fun |b48[PivotBetreeidfy.44:5!456]| () Bool)
(declare-fun |b65[PivotBetreeidfy.214:14]| () Bool)
(declare-fun |b25[ctor:SeqType]| () Bool)
(declare-fun |b51[PivotBetreeidfy.44:5!540]| () Bool)
(declare-fun |b18[funType:regex_2_U]| () Bool)
(declare-fun |b59[funType:AsFuelBottom]| () Bool)
(declare-fun |b90[PivotBetreeidfy.255:35]| () Bool)
(declare-fun |b29[funType:$LS]| () Bool)
(declare-fun |b62[funType:Buffers.BufferStack.PushBufferStack]| () Bool)
(declare-fun |b47[unknown.0:0!445]| () Bool)
(declare-fun |b45[PivotBetreeidfy.44:5]| () Bool)
(declare-fun |b124[]| () Bool)
(declare-fun |b119[]| () Bool)
(declare-fun |b102[]| () Bool)
(declare-fun |b43[unknown.0:0!268]| () Bool)
(declare-fun |b54[PivotBetreeidfy.56:15!636]| () Bool)
(declare-fun |b2[cast:U_2_int]| () Bool)
(declare-fun |b94[BoundedPivotsLibidfy.56:16!1336]| () Bool)
(declare-fun |b24[DafnyPreludebpl.141:18]| () Bool)
(declare-fun |b35[DafnyPreludebpl.955:18]| () Bool)
(declare-fun |b105[]| () Bool)
(declare-fun |b84[PivotBetreeidfy.253:23]| () Bool)
(declare-fun |b13[typeInv:U_2_string]| () Bool)
(declare-fun |b117[]| () Bool)
(declare-fun |b64[funType:PivotBetree.BetreeNode.Promote]| () Bool)
(declare-fun |b125[]| () Bool)
(declare-fun |b66[PivotBetreeidfy.214:14!1396]| () Bool)
(declare-fun |b57[PivotBetreeidfy.62:15!681]| () Bool)
(declare-fun |b40[DafnyPreludebpl.1418:51]| () Bool)
(declare-fun |b17[cast:U_2_regex]| () Bool)
(declare-fun |b11[cast:U_2_rmode]| () Bool)
(declare-fun |b71[funType:#Buffers.BufferStack.BufferStack]| () Bool)
(declare-fun |b58[PivotBetreeidfy.73:15]| () Bool)
(declare-fun |b83[PivotBetreeidfy.250:16]| () Bool)
(declare-fun |b23[funType:$Unbox]| () Bool)
(declare-fun |b22[DafnyPreludebpl.95:29]| () Bool)
(declare-fun |b9[funType:bool_2_U]| () Bool)
(declare-fun |b36[DafnyPreludebpl.984:18]| () Bool)
(declare-fun |b37[DafnyPreludebpl.986:18]| () Bool)
(declare-fun |b72[PivotBetreeidfy.38:13]| () Bool)
(declare-fun |b129[]| () Bool)
(declare-fun |b28[DafnyPreludebpl.233:15]| () Bool)
(declare-fun |b31[funType:Seq#Empty]| () Bool)
(declare-fun |b122[]| () Bool)
(declare-fun |b50[PivotBetreeidfy.44:5!520]| () Bool)
(declare-fun |b46[unknown.0:0!433]| () Bool)
(declare-fun |b32[funType:Seq#Update]| () Bool)
(declare-fun |b111[]| () Bool)
(declare-fun |b103[]| () Bool)
(declare-fun |b112[]| () Bool)
(declare-fun |b4[typeInv:U_2_real]| () Bool)
(declare-fun |b106[]| () Bool)
(declare-fun |b110[]| () Bool)
(declare-fun |b21[funType:$Box]| () Bool)
(declare-fun |b60[PivotBetreeidfy.73:15!730]| () Bool)
(declare-fun |b121[]| () Bool)
(declare-fun |b79[unknown.0:0!1397]| () Bool)
(declare-fun |b44[unknown.0:0!408]| () Bool)
(declare-fun |b15[funType:string_2_U]| () Bool)
(declare-fun |b19[funType:Lit]| () Bool)
(declare-fun |b33[k!2957]| () Bool)
(declare-fun |b118[]| () Bool)
(declare-fun |b126[]| () Bool)
(declare-fun |b81[Domainidfy.17:42!1448]| () Bool)
(declare-fun |b69[PivotBetreeidfy.230:14!1481]| () Bool)
(declare-fun |b16[typeInv:U_2_regex]| () Bool)
(declare-fun |b87[PivotBetreeidfy.254:34]| () Bool)
(declare-fun |b68[PivotBetreeidfy.230:14]| () Bool)
(declare-fun |b34[DafnyPreludebpl.952:18]| () Bool)
(declare-fun |b107[]| () Bool)
(declare-fun |b55[funType:PivotBetree.BetreeNode.DomainRoutedToChild]| () Bool)
(declare-fun |b99[]| () Bool)
(declare-fun |b74[PivotBetreeidfy.296:22!894]| () Bool)
(declare-fun |b123[]| () Bool)
(declare-fun |b5[cast:U_2_real]| () Bool)
(declare-fun |b10[typeInv:U_2_rmode]| () Bool)
(declare-fun |b130[]| () Bool)
(declare-fun |b95[BoundedPivotsLibidfy.39:16!1357]| () Bool)
(declare-fun |b41[DafnyPreludebpl.1419:51]| () Bool)
(declare-fun |b38[DafnyPreludebpl.1413:30]| () Bool)
(declare-fun |b73[PivotBetreeidfy.38:13!852]| () Bool)
(declare-fun |b6[funType:real_2_U]| () Bool)
(declare-fun |b82[unknown.0:0!1484]| () Bool)
(declare-fun |b101[]| () Bool)
(declare-fun |b8[cast:U_2_bool]| () Bool)
(declare-fun |b85[PivotBetreeidfy.253:35]| () Bool)
(declare-fun |b127[]| () Bool)
(declare-fun |b77[BoundedPivotsLibidfy.199:23!850]| () Bool)
(declare-fun |b26[typeInv:SeqTypeInv0]| () Bool)
(declare-fun |b70[PivotBetreeidfy.242:15!1518]| () Bool)
(declare-fun |b114[]| () Bool)
(declare-fun |b88[PivotBetreeidfy.255:47]| () Bool)
(declare-fun |b100[]| () Bool)
(declare-fun |b108[]| () Bool)
(declare-fun |b78[Domainidfy.17:42]| () Bool)
(declare-fun |b97[]| () Bool)
(declare-fun |b104[]| () Bool)
(declare-fun |b128[]| () Bool)
(declare-fun |b109[]| () Bool)
(declare-fun |b86[PivotBetreeidfy.253:65]| () Bool)
(declare-fun |b14[cast:U_2_string]| () Bool)
(declare-fun |b52[unknown.0:0!562]| () Bool)
(declare-fun |b80[Domainidfy.17:42!1440]| () Bool)
(declare-fun |b98[]| () Bool)
(declare-fun |b3[funType:int_2_U]| () Bool)
(declare-fun |b116[]| () Bool)
(declare-fun |b76[BoundedPivotsLibidfy.53:22!573]| () Bool)
(declare-fun |b12[funType:rmode_2_U]| () Bool)
(declare-fun |b20[DafnyPreludebpl.89:29]| () Bool)
(declare-fun |b30[funType:Seq#Build]| () Bool)
(declare-fun |b49[PivotBetreeidfy.44:5!506]| () Bool)
(declare-fun |b75[unknown.0:0!1375]| () Bool)
(declare-fun |b1[typeInv:U_2_int]| () Bool)
(declare-fun |b42[DafnyPreludebpl.1421:51]| () Bool)
(declare-fun |b53[PivotBetreeidfy.48:15!604]| () Bool)
(declare-fun |b113[]| () Bool)
(declare-fun |b89[PivotBetreeidfy.255:77]| () Bool)
(declare-fun |b96[]| () Bool)
(declare-fun |b93[PivotBetreeidfy.257:81]| () Bool)
(declare-fun |b63[PivotBetreeidfy.81:14!772]| () Bool)
(set-info :smt-lib-version |2.6|)
(set-info :category |"industrial"|)
(set-info :boogie-vc-id CheckWellformed$$PivotBetree.BetreeNode.Flush)
(set-option :print-success false)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.arith.nl false)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(declare-sort T@T 0)
(declare-sort T@U 0)
(declare-fun Ctor (T@T) Int)
(declare-fun intType () T@T)
(declare-fun realType () T@T)
(declare-fun boolType () T@T)
(declare-fun rmodeType () T@T)
(declare-fun stringType () T@T)
(declare-fun regexType () T@T)
(declare-fun int_2_U (Int) T@U)
(declare-fun U_2_int (T@U) Int)
(declare-fun type (T@U) T@T)
(declare-fun real_2_U (Real) T@U)
(declare-fun U_2_real (T@U) Real)
(declare-fun bool_2_U (Bool) T@U)
(declare-fun U_2_bool (T@U) Bool)
(declare-fun rmode_2_U (RoundingMode) T@U)
(declare-fun U_2_rmode (T@U) RoundingMode)
(declare-fun string_2_U (String) T@U)
(declare-fun U_2_string (T@U) String)
(declare-fun regex_2_U ((RegEx String)) T@U)
(declare-fun U_2_regex (T@U) (RegEx String))
(declare-fun TChar () T@U)
(declare-fun TBool () T@U)
(declare-fun TInt () T@U)
(declare-fun TReal () T@U)
(declare-fun TORDINAL () T@U)
(declare-fun TagBool () T@U)
(declare-fun TagChar () T@U)
(declare-fun TagInt () T@U)
(declare-fun TagReal () T@U)
(declare-fun TagORDINAL () T@U)
(declare-fun TagSet () T@U)
(declare-fun TagISet () T@U)
(declare-fun TagMultiSet () T@U)
(declare-fun TagSeq () T@U)
(declare-fun TagMap () T@U)
(declare-fun TagIMap () T@U)
(declare-fun TagClass () T@U)
(declare-fun class._System.int () T@U)
(declare-fun class._System.bool () T@U)
(declare-fun class._System.set () T@U)
(declare-fun class._System.seq () T@U)
(declare-fun class._System.multiset () T@U)
(declare-fun alloc () T@U)
(declare-fun allocName () T@U)
(declare-fun Tagclass._System.nat () T@U)
(declare-fun class._System.object? () T@U)
(declare-fun Tagclass._System.object? () T@U)
(declare-fun Tagclass._System.object () T@U)
(declare-fun class._System.array? () T@U)
(declare-fun Tagclass._System.array? () T@U)
(declare-fun Tagclass._System.array () T@U)
(declare-fun Tagclass._System.___hFunc1 () T@U)
(declare-fun Tagclass._System.___hPartialFunc1 () T@U)
(declare-fun Tagclass._System.___hTotalFunc1 () T@U)
(declare-fun Tagclass._System.___hFunc0 () T@U)
(declare-fun Tagclass._System.___hPartialFunc0 () T@U)
(declare-fun Tagclass._System.___hTotalFunc0 () T@U)
(declare-fun class._System.__default () T@U)
(declare-fun Tagclass._System.__default () T@U)
(declare-fun Tagclass._System.___hFunc2 () T@U)
(declare-fun Tagclass._System.___hPartialFunc2 () T@U)
(declare-fun Tagclass._System.___hTotalFunc2 () T@U)
(declare-fun |##_System._tuple#2._#Make2| () T@U)
(declare-fun Tagclass._System.Tuple2 () T@U)
(declare-fun class._System.Tuple2 () T@U)
(declare-fun Tagclass._System.___hFunc4 () T@U)
(declare-fun Tagclass._System.___hPartialFunc4 () T@U)
(declare-fun Tagclass._System.___hTotalFunc4 () T@U)
(declare-fun Tagclass._System.___hFunc3 () T@U)
(declare-fun Tagclass._System.___hPartialFunc3 () T@U)
(declare-fun Tagclass._System.___hTotalFunc3 () T@U)
(declare-fun Tagclass._System.___hFunc2OSO () T@U)
(declare-fun Tagclass._System.___hPartialFunc2OSO () T@U)
(declare-fun Tagclass._System.___hTotalFunc2OSO () T@U)
(declare-fun Tagclass._System.___hFunc3LLOO () T@U)
(declare-fun Tagclass._System.___hPartialFunc3LLOO () T@U)
(declare-fun Tagclass._System.___hTotalFunc3LLOO () T@U)
(declare-fun Tagclass._System.___hFunc1OS () T@U)
(declare-fun Tagclass._System.___hPartialFunc1OS () T@U)
(declare-fun Tagclass._System.___hTotalFunc1OS () T@U)
(declare-fun Tagclass._System.___hFunc0L () T@U)
(declare-fun Tagclass._System.___hPartialFunc0L () T@U)
(declare-fun Tagclass._System.___hTotalFunc0L () T@U)
(declare-fun Tagclass._System.___hFunc2LOO () T@U)
(declare-fun Tagclass._System.___hPartialFunc2LOO () T@U)
(declare-fun Tagclass._System.___hTotalFunc2LOO () T@U)
(declare-fun |##_System._tuple#0._#Make0| () T@U)
(declare-fun Tagclass._System.Tuple0 () T@U)
(declare-fun class._System.Tuple0 () T@U)
(declare-fun Tagclass._System.___hFunc1OL () T@U)
(declare-fun Tagclass._System.___hPartialFunc1OL () T@U)
(declare-fun Tagclass._System.___hTotalFunc1OL () T@U)
(declare-fun Tagclass._System.___hFunc1LO () T@U)
(declare-fun Tagclass._System.___hPartialFunc1LO () T@U)
(declare-fun Tagclass._System.___hTotalFunc1LO () T@U)
(declare-fun |##_System._tuple#2OLL._#Make2| () T@U)
(declare-fun Tagclass._System.Tuple2OLL () T@U)
(declare-fun class._System.Tuple2OLL () T@U)
(declare-fun Tagclass._System.___hFunc3LLOL () T@U)
(declare-fun Tagclass._System.___hPartialFunc3LLOL () T@U)
(declare-fun Tagclass._System.___hTotalFunc3LLOL () T@U)
(declare-fun Tagclass._System.___hFunc2SSO () T@U)
(declare-fun Tagclass._System.___hPartialFunc2SSO () T@U)
(declare-fun Tagclass._System.___hTotalFunc2SSO () T@U)
(declare-fun Tagclass._System.___hFunc2LLO () T@U)
(declare-fun Tagclass._System.___hPartialFunc2LLO () T@U)
(declare-fun Tagclass._System.___hTotalFunc2LLO () T@U)
(declare-fun Tagclass._System.___hFunc1SS () T@U)
(declare-fun Tagclass._System.___hPartialFunc1SS () T@U)
(declare-fun Tagclass._System.___hTotalFunc1SS () T@U)
(declare-fun Tagclass._System.___hFunc1LL () T@U)
(declare-fun Tagclass._System.___hPartialFunc1LL () T@U)
(declare-fun Tagclass._System.___hTotalFunc1LL () T@U)
(declare-fun |##PivotBetree.TransitionLabel.QueryLabel| () T@U)
(declare-fun Tagclass.KeyType.Key () T@U)
(declare-fun Tagclass.ValueType.Value () T@U)
(declare-fun Tagclass.PivotBetree.TransitionLabel () T@U)
(declare-fun |##PivotBetree.TransitionLabel.PutLabel| () T@U)
(declare-fun Tagclass.MsgHistoryMod.MsgHistory () T@U)
(declare-fun |##PivotBetree.TransitionLabel.QueryEndLsnLabel| () T@U)
(declare-fun |##PivotBetree.TransitionLabel.FreezeAsLabel| () T@U)
(declare-fun Tagclass.PivotBetree.BetreeNode () T@U)
(declare-fun Tagclass.StampedMod.Stamped () T@U)
(declare-fun |##PivotBetree.TransitionLabel.InternalLabel| () T@U)
(declare-fun class.PivotBetree.TransitionLabel () T@U)
(declare-fun |##PivotBetree.BetreeNode.Nil| () T@U)
(declare-fun |##PivotBetree.BetreeNode.BetreeNode| () T@U)
(declare-fun Tagclass.Buffers.BufferStack () T@U)
(declare-fun Tagclass.Upperbounded__Lexicographic__Byte__Order.Element () T@U)
(declare-fun class.PivotBetree.BetreeNode () T@U)
(declare-fun Tagclass.DomainMod.Domain () T@U)
(declare-fun Tagclass.SplitRequestMod.SplitRequest () T@U)
(declare-fun Tagclass.NativeTypes.byte () T@U)
(declare-fun |##PivotBetree.QueryReceiptLine.QueryReceiptLine| () T@U)
(declare-fun Tagclass.ValueMessage.Message () T@U)
(declare-fun Tagclass.PivotBetree.QueryReceiptLine () T@U)
(declare-fun class.PivotBetree.QueryReceiptLine () T@U)
(declare-fun |##PivotBetree.QueryReceipt.QueryReceipt| () T@U)
(declare-fun Tagclass.PivotBetree.QueryReceipt () T@U)
(declare-fun class.PivotBetree.QueryReceipt () T@U)
(declare-fun |##PivotBetree.Variables.Variables| () T@U)
(declare-fun Tagclass.MemtableMod.Memtable () T@U)
(declare-fun Tagclass.PivotBetree.Variables () T@U)
(declare-fun class.PivotBetree.Variables () T@U)
(declare-fun |##PivotBetree.Path.Path| () T@U)
(declare-fun Tagclass.PivotBetree.Path () T@U)
(declare-fun class.PivotBetree.Path () T@U)
(declare-fun |##PivotBetree.Step.QueryStep| () T@U)
(declare-fun Tagclass.PivotBetree.Step () T@U)
(declare-fun |##PivotBetree.Step.PutStep| () T@U)
(declare-fun |##PivotBetree.Step.QueryEndLsnStep| () T@U)
(declare-fun |##PivotBetree.Step.FreezeAsStep| () T@U)
(declare-fun |##PivotBetree.Step.InternalGrowStep| () T@U)
(declare-fun |##PivotBetree.Step.InternalSplitStep| () T@U)
(declare-fun |##PivotBetree.Step.InternalFlushMemtableStep| () T@U)
(declare-fun |##PivotBetree.Step.InternalFlushStep| () T@U)
(declare-fun |##PivotBetree.Step.InternalCompactStep| () T@U)
(declare-fun |##PivotBetree.Step.InternalNoOpStep| () T@U)
(declare-fun class.PivotBetree.Step () T@U)
(declare-fun class.PivotBetree.__default () T@U)
(declare-fun Tagclass.PivotBetree.__default () T@U)
(declare-fun Tagclass.Buffers.Buffer () T@U)
(declare-fun |##Options.Option.None| () T@U)
(declare-fun Tagclass.Options.Option () T@U)
(declare-fun |##Options.Option.Some| () T@U)
(declare-fun class.Options.Option () T@U)
(declare-fun class.Options.__default () T@U)
(declare-fun Tagclass.Options.__default () T@U)
(declare-fun Tagclass.NativeTypes.sbyte () T@U)
(declare-fun class.NativeTypes.sbyte () T@U)
(declare-fun class.NativeTypes.byte () T@U)
(declare-fun Tagclass.NativeTypes.int16 () T@U)
(declare-fun class.NativeTypes.int16 () T@U)
(declare-fun Tagclass.NativeTypes.uint16 () T@U)
(declare-fun class.NativeTypes.uint16 () T@U)
(declare-fun Tagclass.NativeTypes.int32 () T@U)
(declare-fun class.NativeTypes.int32 () T@U)
(declare-fun Tagclass.NativeTypes.uint32 () T@U)
(declare-fun class.NativeTypes.uint32 () T@U)
(declare-fun Tagclass.NativeTypes.int64 () T@U)
(declare-fun class.NativeTypes.int64 () T@U)
(declare-fun Tagclass.NativeTypes.uint64 () T@U)
(declare-fun class.NativeTypes.uint64 () T@U)
(declare-fun Tagclass.NativeTypes.nat8 () T@U)
(declare-fun class.NativeTypes.nat8 () T@U)
(declare-fun Tagclass.NativeTypes.nat16 () T@U)
(declare-fun class.NativeTypes.nat16 () T@U)
(declare-fun Tagclass.NativeTypes.nat32 () T@U)
(declare-fun class.NativeTypes.nat32 () T@U)
(declare-fun Tagclass.NativeTypes.nat64 () T@U)
(declare-fun class.NativeTypes.nat64 () T@U)
(declare-fun Tagclass.NativeTypes.uint128 () T@U)
(declare-fun class.NativeTypes.uint128 () T@U)
(declare-fun class.NativeTypes.__default () T@U)
(declare-fun Tagclass.NativeTypes.__default () T@U)
(declare-fun class.KeyType.__default () T@U)
(declare-fun Tagclass.KeyType.__default () T@U)
(declare-fun class.ValueType.__default () T@U)
(declare-fun Tagclass.ValueType.__default () T@U)
(declare-fun class.LinearMaybe.predefined () T@U)
(declare-fun class.LinearMaybe.__default () T@U)
(declare-fun Tagclass.LinearMaybe.__default () T@U)
(declare-fun class.LinearExtern.predefined () T@U)
(declare-fun class.LinearExtern.__default () T@U)
(declare-fun Tagclass.LinearExtern.__default () T@U)
(declare-fun |##ValueMessage.Delta.NoDelta| () T@U)
(declare-fun Tagclass.ValueMessage.Delta () T@U)
(declare-fun class.ValueMessage.Delta () T@U)
(declare-fun class.ValueMessage.__default () T@U)
(declare-fun Tagclass.ValueMessage.__default () T@U)
(declare-fun |##ValueMessage.Message.Define| () T@U)
(declare-fun |##ValueMessage.Message.Update| () T@U)
(declare-fun class.ValueMessage.Message () T@U)
(declare-fun class.TotalKMMapMod.__default () T@U)
(declare-fun Tagclass.TotalKMMapMod.__default () T@U)
(declare-fun Tagclass.TotalKMMapMod.TotalMap () T@U)
(declare-fun class.LSNMod.__default () T@U)
(declare-fun Tagclass.LSNMod.__default () T@U)
(declare-fun |##StampedMod.Stamped.Stamped| () T@U)
(declare-fun class.StampedMod.Stamped () T@U)
(declare-fun class.StampedMod.__default () T@U)
(declare-fun Tagclass.StampedMod.__default () T@U)
(declare-fun class.SequencesLite.__default () T@U)
(declare-fun Tagclass.SequencesLite.__default () T@U)
(declare-fun class.Mathematics.__default () T@U)
(declare-fun Tagclass.Mathematics.__default () T@U)
(declare-fun class.LinearSequence__i.__default () T@U)
(declare-fun Tagclass.LinearSequence__i.__default () T@U)
(declare-fun class.Sequences.__default () T@U)
(declare-fun Tagclass.Sequences.__default () T@U)
(declare-fun class.MapRemove_s.__default () T@U)
(declare-fun Tagclass.MapRemove_s.__default () T@U)
(declare-fun class.Maps.__default () T@U)
(declare-fun Tagclass.Maps.__default () T@U)
(declare-fun |##MsgHistoryMod.KeyedMessage.KeyedMessage| () T@U)
(declare-fun Tagclass.MsgHistoryMod.KeyedMessage () T@U)
(declare-fun class.MsgHistoryMod.KeyedMessage () T@U)
(declare-fun |##MsgHistoryMod.MsgHistory.MsgHistory| () T@U)
(declare-fun class.MsgHistoryMod.MsgHistory () T@U)
(declare-fun class.MsgHistoryMod.__default () T@U)
(declare-fun Tagclass.MsgHistoryMod.__default () T@U)
(declare-fun |##Buffers.Buffer.Buffer| () T@U)
(declare-fun class.Buffers.Buffer () T@U)
(declare-fun |##Buffers.BufferStack.BufferStack| () T@U)
(declare-fun class.Buffers.BufferStack () T@U)
(declare-fun class.Buffers.__default () T@U)
(declare-fun Tagclass.Buffers.__default () T@U)
(declare-fun |##MemtableMod.Memtable.Memtable| () T@U)
(declare-fun class.MemtableMod.Memtable () T@U)
(declare-fun class.MemtableMod.__default () T@U)
(declare-fun Tagclass.MemtableMod.__default () T@U)
(declare-fun class.Sets.__default () T@U)
(declare-fun Tagclass.Sets.__default () T@U)
(declare-fun class.SeqComparison.__default () T@U)
(declare-fun Tagclass.SeqComparison.__default () T@U)
(declare-fun class.NativeArrays.__default () T@U)
(declare-fun Tagclass.NativeArrays.__default () T@U)
(declare-fun class.Byte__Order.__default () T@U)
(declare-fun Tagclass.Byte__Order.__default () T@U)
(declare-fun class.Lexicographic__Byte__Order.__default () T@U)
(declare-fun Tagclass.Lexicographic__Byte__Order.__default () T@U)
(declare-fun class.Upperbounded__Lexicographic__Byte__Order.__default () T@U)
(declare-fun Tagclass.Upperbounded__Lexicographic__Byte__Order.__default () T@U)
(declare-fun |##Upperbounded_Lexicographic_Byte_Order.Element.Element| () T@U)
(declare-fun |##Upperbounded_Lexicographic_Byte_Order.Element.Max_Element| () T@U)
(declare-fun class.Upperbounded__Lexicographic__Byte__Order.Element () T@U)
(declare-fun class.Upperbounded__Lexicographic__Byte__Order__Impl.__default () T@U)
(declare-fun Tagclass.Upperbounded__Lexicographic__Byte__Order__Impl.__default () T@U)
(declare-fun class.BoundedPivotsLib.__default () T@U)
(declare-fun Tagclass.BoundedPivotsLib.__default () T@U)
(declare-fun |##DomainMod.Domain.EmptyDomain| () T@U)
(declare-fun |##DomainMod.Domain.Domain| () T@U)
(declare-fun class.DomainMod.Domain () T@U)
(declare-fun class.DomainMod.__default () T@U)
(declare-fun Tagclass.DomainMod.__default () T@U)
(declare-fun |##SplitRequestMod.SplitRequest.SplitLeaf| () T@U)
(declare-fun |##SplitRequestMod.SplitRequest.SplitIndex| () T@U)
(declare-fun class.SplitRequestMod.SplitRequest () T@U)
(declare-fun class.SplitRequestMod.__default () T@U)
(declare-fun Tagclass.SplitRequestMod.__default () T@U)
(declare-fun tytagFamily$nat () T@U)
(declare-fun tytagFamily$object () T@U)
(declare-fun tytagFamily$array () T@U)
(declare-fun |tytagFamily$_#Func1| () T@U)
(declare-fun |tytagFamily$_#PartialFunc1| () T@U)
(declare-fun |tytagFamily$_#TotalFunc1| () T@U)
(declare-fun |tytagFamily$_#Func0| () T@U)
(declare-fun |tytagFamily$_#PartialFunc0| () T@U)
(declare-fun |tytagFamily$_#TotalFunc0| () T@U)
(declare-fun tytagFamily$_default () T@U)
(declare-fun |tytagFamily$_#Func2| () T@U)
(declare-fun |tytagFamily$_#PartialFunc2| () T@U)
(declare-fun |tytagFamily$_#TotalFunc2| () T@U)
(declare-fun |tytagFamily$_tuple#2| () T@U)
(declare-fun |tytagFamily$_#Func4| () T@U)
(declare-fun |tytagFamily$_#PartialFunc4| () T@U)
(declare-fun |tytagFamily$_#TotalFunc4| () T@U)
(declare-fun |tytagFamily$_#Func3| () T@U)
(declare-fun |tytagFamily$_#PartialFunc3| () T@U)
(declare-fun |tytagFamily$_#TotalFunc3| () T@U)
(declare-fun |tytagFamily$_#Func2OSO| () T@U)
(declare-fun |tytagFamily$_#PartialFunc2OSO| () T@U)
(declare-fun |tytagFamily$_#TotalFunc2OSO| () T@U)
(declare-fun |tytagFamily$_#Func3LLOO| () T@U)
(declare-fun |tytagFamily$_#PartialFunc3LLOO| () T@U)
(declare-fun |tytagFamily$_#TotalFunc3LLOO| () T@U)
(declare-fun |tytagFamily$_#Func1OS| () T@U)
(declare-fun |tytagFamily$_#PartialFunc1OS| () T@U)
(declare-fun |tytagFamily$_#TotalFunc1OS| () T@U)
(declare-fun |tytagFamily$_#Func0L| () T@U)
(declare-fun |tytagFamily$_#PartialFunc0L| () T@U)
(declare-fun |tytagFamily$_#TotalFunc0L| () T@U)
(declare-fun |tytagFamily$_#Func2LOO| () T@U)
(declare-fun |tytagFamily$_#PartialFunc2LOO| () T@U)
(declare-fun |tytagFamily$_#TotalFunc2LOO| () T@U)
(declare-fun |tytagFamily$_tuple#0| () T@U)
(declare-fun |tytagFamily$_#Func1OL| () T@U)
(declare-fun |tytagFamily$_#PartialFunc1OL| () T@U)
(declare-fun |tytagFamily$_#TotalFunc1OL| () T@U)
(declare-fun |tytagFamily$_#Func1LO| () T@U)
(declare-fun |tytagFamily$_#PartialFunc1LO| () T@U)
(declare-fun |tytagFamily$_#TotalFunc1LO| () T@U)
(declare-fun |tytagFamily$_tuple#2OLL| () T@U)
(declare-fun |tytagFamily$_#Func3LLOL| () T@U)
(declare-fun |tytagFamily$_#PartialFunc3LLOL| () T@U)
(declare-fun |tytagFamily$_#TotalFunc3LLOL| () T@U)
(declare-fun |tytagFamily$_#Func2SSO| () T@U)
(declare-fun |tytagFamily$_#PartialFunc2SSO| () T@U)
(declare-fun |tytagFamily$_#TotalFunc2SSO| () T@U)
(declare-fun |tytagFamily$_#Func2LLO| () T@U)
(declare-fun |tytagFamily$_#PartialFunc2LLO| () T@U)
(declare-fun |tytagFamily$_#TotalFunc2LLO| () T@U)
(declare-fun |tytagFamily$_#Func1SS| () T@U)
(declare-fun |tytagFamily$_#PartialFunc1SS| () T@U)
(declare-fun |tytagFamily$_#TotalFunc1SS| () T@U)
(declare-fun |tytagFamily$_#Func1LL| () T@U)
(declare-fun |tytagFamily$_#PartialFunc1LL| () T@U)
(declare-fun |tytagFamily$_#TotalFunc1LL| () T@U)
(declare-fun tytagFamily$Key () T@U)
(declare-fun tytagFamily$Value () T@U)
(declare-fun tytagFamily$TransitionLabel () T@U)
(declare-fun tytagFamily$MsgHistory () T@U)
(declare-fun tytagFamily$BetreeNode () T@U)
(declare-fun tytagFamily$Stamped () T@U)
(declare-fun tytagFamily$BufferStack () T@U)
(declare-fun tytagFamily$Element () T@U)
(declare-fun tytagFamily$Domain () T@U)
(declare-fun tytagFamily$SplitRequest () T@U)
(declare-fun tytagFamily$byte () T@U)
(declare-fun tytagFamily$Message () T@U)
(declare-fun tytagFamily$QueryReceiptLine () T@U)
(declare-fun tytagFamily$QueryReceipt () T@U)
(declare-fun tytagFamily$Memtable () T@U)
(declare-fun tytagFamily$Variables () T@U)
(declare-fun tytagFamily$Path () T@U)
(declare-fun tytagFamily$Step () T@U)
(declare-fun tytagFamily$Buffer () T@U)
(declare-fun tytagFamily$Option () T@U)
(declare-fun tytagFamily$sbyte () T@U)
(declare-fun tytagFamily$int16 () T@U)
(declare-fun tytagFamily$uint16 () T@U)
(declare-fun tytagFamily$int32 () T@U)
(declare-fun tytagFamily$uint32 () T@U)
(declare-fun tytagFamily$int64 () T@U)
(declare-fun tytagFamily$uint64 () T@U)
(declare-fun tytagFamily$nat8 () T@U)
(declare-fun tytagFamily$nat16 () T@U)
(declare-fun tytagFamily$nat32 () T@U)
(declare-fun tytagFamily$nat64 () T@U)
(declare-fun tytagFamily$uint128 () T@U)
(declare-fun tytagFamily$Delta () T@U)
(declare-fun tytagFamily$TotalMap () T@U)
(declare-fun tytagFamily$KeyedMessage () T@U)
(declare-fun Lit (T@U) T@U)
(declare-fun BoxType () T@T)
(declare-fun $Box (T@U) T@U)
(declare-fun LitInt (Int) Int)
(declare-fun $Unbox (T@T T@U) T@U)
(declare-fun SeqType (T@T) T@T)
(declare-fun SeqTypeInv0 (T@T) T@T)
(declare-fun |Seq#Index| (T@U Int) T@U)
(declare-fun $Is (T@U T@U) Bool)
(declare-fun TSeq (T@U) T@U)
(declare-fun $IsBox (T@U T@U) Bool)
(declare-fun i!405!0 (T@U T@U) Int)
(declare-fun |Seq#Length| (T@U) Int)
(declare-fun TyType () T@T)
(declare-fun $LS (T@U) T@U)
(declare-fun LayerTypeType () T@T)
(declare-fun |Seq#Build| (T@U T@U) T@U)
(declare-fun |Seq#Empty| (T@T) T@U)
(declare-fun |Seq#Update| (T@U Int T@U) T@U)
(declare-fun INTERNAL_add_boogie (Int Int) Int)
(declare-fun INTERNAL_sub_boogie (Int Int) Int)
(declare-fun INTERNAL_lt_boogie (Int Int) Bool)
(declare-fun INTERNAL_le_boogie (Int Int) Bool)
(declare-fun INTERNAL_ge_boogie (Int Int) Bool)
(declare-fun Tclass.PivotBetree.BetreeNode () T@U)
(declare-fun DatatypeTypeType () T@T)
(declare-fun DatatypeCtorId (T@U) T@U)
(declare-fun |#PivotBetree.BetreeNode.Nil| () T@U)
(declare-fun PivotBetree.BetreeNode.Nil_q (T@U) Bool)
(declare-fun |#PivotBetree.BetreeNode.BetreeNode| (T@U T@U T@U) T@U)
(declare-fun PivotBetree.BetreeNode.BetreeNode_q (T@U) Bool)
(declare-fun |a#62#2#0!1318!3| (T@U) T@U)
(declare-fun |a#62#1#0!1318!1| (T@U) T@U)
(declare-fun |a#62#0#0!1318!2| (T@U) T@U)
(declare-fun Tclass.Upperbounded__Lexicographic__Byte__Order.Element () T@U)
(declare-fun Tclass.Buffers.BufferStack () T@U)
(declare-fun PivotBetree.BetreeNode.buffers (T@U) T@U)
(declare-fun PivotBetree.BetreeNode.pivotTable (T@U) T@U)
(declare-fun PivotBetree.BetreeNode.children (T@U) T@U)
(declare-fun PivotBetree.BetreeNode.LocalStructure (T@U) Bool)
(declare-fun BoundedPivotsLib.__default.NumBuckets (T@U) Int)
(declare-fun BoundedPivotsLib.__default.WFPivots (T@U) Bool)
(declare-fun |BoundedPivotsLib.__default.NumBuckets#canCall| (T@U) Bool)
(declare-fun |BoundedPivotsLib.__default.WFPivots#canCall| (T@U) Bool)
(declare-fun $FunctionContextHeight () Int)
(declare-fun |PivotBetree.BetreeNode.LocalStructure#canCall| (T@U) Bool)
(declare-fun PivotBetree.BetreeNode.ValidChildIndex (T@U Int) Bool)
(declare-fun |PivotBetree.BetreeNode.ValidChildIndex#canCall| (T@U Int) Bool)
(declare-fun PivotBetree.BetreeNode.DomainRoutedToChild (T@U Int) T@U)
(declare-fun PivotBetree.BetreeNode.MyDomain (T@U) T@U)
(declare-fun PivotBetree.BetreeNode.LinkedChildren (T@U) Bool)
(declare-fun |DomainMod.Domain#Equal| (T@U T@U) Bool)
(declare-fun |i#0@@0!1354!4| (T@U) Int)
(declare-fun |PivotBetree.BetreeNode.DomainRoutedToChild#canCall| (T@U Int) Bool)
(declare-fun |PivotBetree.BetreeNode.MyDomain#canCall| (T@U) Bool)
(declare-fun |$IsA#DomainMod.Domain| (T@U) Bool)
(declare-fun |PivotBetree.BetreeNode.LinkedChildren#canCall| (T@U) Bool)
(declare-fun PivotBetree.BetreeNode.WF (T@U T@U) Bool)
(declare-fun AsFuelBottom (T@U) T@U)
(declare-fun $LZ () T@U)
(declare-fun PivotBetree.__default.WFChildren (T@U T@U) Bool)
(declare-fun |PivotBetree.__default.WFChildren#canCall| (T@U) Bool)
(declare-fun |PivotBetree.BetreeNode.WF#canCall| (T@U) Bool)
(declare-fun PivotBetree.BetreeNode.PushBufferStack (T@U T@U) T@U)
(declare-fun |PivotBetree.BetreeNode.PushBufferStack#canCall| (T@U T@U) Bool)
(declare-fun Buffers.BufferStack.PushBufferStack (T@U T@U) T@U)
(declare-fun |Buffers.BufferStack.PushBufferStack#canCall| (T@U T@U) Bool)
(declare-fun PivotBetree.BetreeNode.Promote (T@U T@U) T@U)
(declare-fun DomainMod.Domain.Domain_q (T@U) Bool)
(declare-fun DomainMod.Domain.WF (T@U) Bool)
(declare-fun Tclass.DomainMod.Domain () T@U)
(declare-fun |PivotBetree.BetreeNode.Promote#canCall| (T@U T@U) Bool)
(declare-fun PivotBetree.__default.EmptyRoot (T@U) T@U)
(declare-fun |PivotBetree.__default.EmptyRoot#canCall| (T@U) Bool)
(declare-fun |#DomainMod.Domain.Domain| (T@U T@U) T@U)
(declare-fun Sequences.__default.Last (T@U T@U) T@U)
(declare-fun |Sequences.__default.Last#canCall| (T@U T@U) Bool)
(declare-fun PivotBetree.BetreeNode.CanFlush (T@U Int) Bool)
(declare-fun |PivotBetree.BetreeNode.CanFlush#canCall| (T@U Int) Bool)
(declare-fun |#Buffers.BufferStack.BufferStack| (T@U) T@U)
(declare-fun |i#0@@30!2532!5| (T@U T@U) Int)
(declare-fun DomainMod.Domain.end (T@U) T@U)
(declare-fun DomainMod.Domain.start (T@U) T@U)
(declare-fun Tclass.ValueMessage.Message () T@U)
(declare-fun TotalKMMapMod.__default.DefaultV () T@U)
(declare-fun TotalKMMapMod.__default.TerminalValue (T@U) Bool)
(declare-fun INTERNAL_gt_boogie (Int Int) Bool)
(declare-fun BoundedPivotsLib.__default.ElementsAreKeys (T@U) Bool)
(declare-fun Upperbounded__Lexicographic__Byte__Order.Element.Element_q (T@U) Bool)
(declare-fun |i#0@@174!4848!7| (T@U) Int)
(declare-fun Upperbounded__Lexicographic__Byte__Order.__default.IsStrictlySorted (T@U T@U) Bool)
(declare-fun StartFuel_Upperbounded_Lexicographic_Byte_Order._default.IsStrictlySorted () T@U)
(declare-fun |BoundedPivotsLib.__default.ElementsAreKeys#canCall| (T@U) Bool)
(declare-fun |i#0@@173!4850!6| (T@U) Int)
(declare-fun |Upperbounded__Lexicographic__Byte__Order.__default.IsStrictlySorted#canCall| (T@U) Bool)
(declare-fun |out#0@@6| () T@U)
(declare-fun StartFuelAssert_Upperbounded_Lexicographic_Byte_Order._default.IsStrictlySorted () T@U)
(declare-fun MapType6Type (T@T T@T) T@T)
(declare-fun refType () T@T)
(declare-fun $_Frame@0 () T@U)
(declare-fun MapType0Type (T@T T@T) T@T)
(declare-fun MapType1Type () T@T)
(declare-fun $Heap@@108 () T@U)
(declare-fun |keepKeys#Z#0@0| () T@U)
(declare-fun $_Frame@0@@0 () T@U)
(declare-fun this@@325 () T@U)
(declare-fun |let#0#0#0| () T@U)
(declare-fun |keptBuffers#Z#0@0| () T@U)
(declare-fun |let#1#0#0| () T@U)
(declare-fun |movedBuffers#Z#0@0| () T@U)
(declare-fun |##accept#1@0| () T@U)
(declare-fun |let#2#0#0| () T@U)
(declare-fun |##children#0@0| () T@U)
(declare-fun |newChild#Z#0@0| () T@U)
(declare-fun |##domain#0@0| () T@U)
(declare-fun StartFuelAssert_DomainMod.Domain.SaneKeys () T@U)
(declare-fun |let#3#0#0| () T@U)
(declare-fun StartFuel_Sequences._default.Range () T@U)
(declare-fun StartFuelAssert_Sequences._default.Range () T@U)
(declare-fun StartFuel_Sequences._default.ApplyOpaque () T@U)
(declare-fun StartFuelAssert_Sequences._default.ApplyOpaque () T@U)
(declare-fun StartFuel_Sequences._default.remove () T@U)
(declare-fun StartFuelAssert_Sequences._default.remove () T@U)
(declare-fun StartFuel_Sequences._default.RemoveOneValue () T@U)
(declare-fun StartFuelAssert_Sequences._default.RemoveOneValue () T@U)
(declare-fun StartFuelAssert_Sequences._default.insert () T@U)
(declare-fun StartFuelAssert_Sequences._default.replace1with2 () T@U)
(declare-fun StartFuel_Sequences._default.replace2with1 () T@U)
(declare-fun StartFuelAssert_Sequences._default.replace2with1 () T@U)
(declare-fun StartFuel_Sequences._default.concat () T@U)
(declare-fun StartFuelAssert_Sequences._default.concat () T@U)
(declare-fun StartFuel_Sequences._default.concat3 () T@U)
(declare-fun StartFuelAssert_Sequences._default.concat3 () T@U)
(declare-fun StartFuel_Sequences._default.concatSeq () T@U)
(declare-fun StartFuelAssert_Sequences._default.concatSeq () T@U)
(declare-fun StartFuel_Sequences._default.IsPrefix () T@U)
(declare-fun StartFuelAssert_Sequences._default.IsPrefix () T@U)
(declare-fun StartFuel_Sequences._default.IsSuffix () T@U)
(declare-fun StartFuelAssert_Sequences._default.IsSuffix () T@U)
(declare-fun StartFuelAssert_Sequences._default.SeqIndexIterate () T@U)
(declare-fun StartFuel_Sequences._default.SeqIndex () T@U)
(declare-fun StartFuelAssert_Sequences._default.SeqIndex () T@U)
(declare-fun StartFuel_Sequences._default.SeqOfLength () T@U)
(declare-fun StartFuelAssert_Sequences._default.SeqOfLength () T@U)
(declare-fun StartFuel_Sequences._default.SeqIndexUpdate () T@U)
(declare-fun StartFuelAssert_Sequences._default.SeqIndexUpdate () T@U)
(declare-fun StartFuel_Sequences._default.Zip () T@U)
(declare-fun StartFuelAssert_Sequences._default.Zip () T@U)
(declare-fun StartFuelAssert_Sequences._default.Unzip () T@U)
(declare-fun StartFuel_Sequences._default.Flatten () T@U)
(declare-fun StartFuelAssert_Sequences._default.Flatten () T@U)
(declare-fun StartFuel_Sequences._default.seqMax () T@U)
(declare-fun StartFuelAssert_Sequences._default.seqMax () T@U)
(declare-fun StartFuel_Sequences._default.fill () T@U)
(declare-fun StartFuelAssert_Sequences._default.fill () T@U)
(declare-fun StartFuel_Maps._default.MapRemoveStrong () T@U)
(declare-fun StartFuelAssert_Maps._default.MapRemoveStrong () T@U)
(declare-fun StartFuel_Maps._default.MapRemove1Strong () T@U)
(declare-fun StartFuelAssert_Maps._default.MapRemove1Strong () T@U)
(declare-fun StartFuel_Maps._default.IMapInvert () T@U)
(declare-fun StartFuelAssert_Maps._default.IMapInvert () T@U)
(declare-fun StartFuel_Maps._default.IMapRemove () T@U)
(declare-fun StartFuelAssert_Maps._default.IMapRemove () T@U)
(declare-fun StartFuel_Maps._default.IMapRemove1 () T@U)
(declare-fun StartFuelAssert_Maps._default.IMapRemove1 () T@U)
(declare-fun StartFuelAssert_Maps._default.MapDisjointUnion () T@U)
(declare-fun StartFuelAssert_Maps._default.MapUnionPreferA () T@U)
(declare-fun StartFuel_Maps._default.MapUnionPreferB () T@U)
(declare-fun StartFuelAssert_Maps._default.MapUnionPreferB () T@U)
(declare-fun StartFuel_Maps._default.MapUnion () T@U)
(declare-fun StartFuelAssert_Maps._default.MapUnion () T@U)
(declare-fun StartFuelAssert_Maps._default.IMapUnionPreferA () T@U)
(declare-fun StartFuel_Maps._default.IMapUnionPreferB () T@U)
(declare-fun StartFuelAssert_Maps._default.IMapUnionPreferB () T@U)
(declare-fun StartFuel_Maps._default.IMapUnion () T@U)
(declare-fun StartFuelAssert_Maps._default.IMapUnion () T@U)
(declare-fun StartFuel_Maps._default.MapDisjointUnion3 () T@U)
(declare-fun StartFuelAssert_Maps._default.MapDisjointUnion3 () T@U)
(declare-fun StartFuelAssert_MsgHistoryMod.MsgHistory.LSNSet () T@U)
(declare-fun StartFuelAssert_SeqComparison._default.lte () T@U)
(declare-fun StartFuelAssert_Byte_Order._default.lte () T@U)
(declare-fun StartFuel_Byte_Order._default.binarySearchIndexOfFirstKeyGte () T@U)
(declare-fun StartFuelAssert_Byte_Order._default.binarySearchIndexOfFirstKeyGte () T@U)
(declare-fun StartFuel_Byte_Order._default.binarySearchIndexOfFirstKeyGteWithLowerBound () T@U)
(declare-fun StartFuelAssert_Byte_Order._default.binarySearchIndexOfFirstKeyGteWithLowerBound () T@U)
(declare-fun StartFuel_Byte_Order._default.binarySearchIndexOfFirstKeyGt () T@U)
(declare-fun StartFuelAssert_Byte_Order._default.binarySearchIndexOfFirstKeyGt () T@U)
(declare-fun StartFuel_Byte_Order._default.NotMinimum () T@U)
(declare-fun StartFuelAssert_Byte_Order._default.NotMinimum () T@U)
(declare-fun StartFuel_Byte_Order._default.SortedSeqForMap () T@U)
(declare-fun StartFuelAssert_Byte_Order._default.SortedSeqForMap () T@U)
(declare-fun StartFuelAssert_Byte_Order._default.minimum () T@U)
(declare-fun StartFuel_Byte_Order._default.minimumOpt () T@U)
(declare-fun StartFuelAssert_Byte_Order._default.minimumOpt () T@U)
(declare-fun StartFuelAssert_Byte_Order._default.maximum () T@U)
(declare-fun StartFuel_Byte_Order._default.maximumOpt () T@U)
(declare-fun StartFuelAssert_Byte_Order._default.maximumOpt () T@U)
(declare-fun StartFuelAssert_Byte_Order._default.IsStrictlySorted () T@U)
(declare-fun StartFuel_Lexicographic_Byte_Order._default.binarySearchIndexOfFirstKeyGte () T@U)
(declare-fun StartFuelAssert_Lexicographic_Byte_Order._default.binarySearchIndexOfFirstKeyGte () T@U)
(declare-fun StartFuel_Lexicographic_Byte_Order._default.binarySearchIndexOfFirstKeyGteWithLowerBound () T@U)
(declare-fun StartFuelAssert_Lexicographic_Byte_Order._default.binarySearchIndexOfFirstKeyGteWithLowerBound () T@U)
(declare-fun StartFuel_Lexicographic_Byte_Order._default.binarySearchIndexOfFirstKeyGt () T@U)
(declare-fun StartFuelAssert_Lexicographic_Byte_Order._default.binarySearchIndexOfFirstKeyGt () T@U)
(declare-fun StartFuelAssert_Lexicographic_Byte_Order._default.NotMinimum () T@U)
(declare-fun StartFuel_Lexicographic_Byte_Order._default.SortedSeqForMap () T@U)
(declare-fun StartFuelAssert_Lexicographic_Byte_Order._default.SortedSeqForMap () T@U)
(declare-fun StartFuelAssert_Lexicographic_Byte_Order._default.minimum () T@U)
(declare-fun StartFuel_Lexicographic_Byte_Order._default.minimumOpt () T@U)
(declare-fun StartFuelAssert_Lexicographic_Byte_Order._default.minimumOpt () T@U)
(declare-fun StartFuelAssert_Lexicographic_Byte_Order._default.maximum () T@U)
(declare-fun StartFuel_Lexicographic_Byte_Order._default.maximumOpt () T@U)
(declare-fun StartFuelAssert_Lexicographic_Byte_Order._default.maximumOpt () T@U)
(declare-fun StartFuelAssert_Lexicographic_Byte_Order._default.IsStrictlySorted () T@U)
(declare-fun StartFuel_Upperbounded_Lexicographic_Byte_Order._default.binarySearchIndexOfFirstKeyGte () T@U)
(declare-fun StartFuelAssert_Upperbounded_Lexicographic_Byte_Order._default.binarySearchIndexOfFirstKeyGte () T@U)
(declare-fun StartFuel_Upperbounded_Lexicographic_Byte_Order._default.binarySearchIndexOfFirstKeyGteWithLowerBound () T@U)
(declare-fun StartFuelAssert_Upperbounded_Lexicographic_Byte_Order._default.binarySearchIndexOfFirstKeyGteWithLowerBound () T@U)
(declare-fun StartFuel_Upperbounded_Lexicographic_Byte_Order._default.binarySearchIndexOfFirstKeyGt () T@U)
(declare-fun StartFuelAssert_Upperbounded_Lexicographic_Byte_Order._default.binarySearchIndexOfFirstKeyGt () T@U)
(declare-fun StartFuelAssert_Upperbounded_Lexicographic_Byte_Order._default.NotMinimum () T@U)
(declare-fun StartFuel_Upperbounded_Lexicographic_Byte_Order._default.SortedSeqForMap () T@U)
(declare-fun StartFuelAssert_Upperbounded_Lexicographic_Byte_Order._default.SortedSeqForMap () T@U)
(declare-fun StartFuelAssert_Upperbounded_Lexicographic_Byte_Order._default.minimum () T@U)
(declare-fun StartFuel_Upperbounded_Lexicographic_Byte_Order._default.minimumOpt () T@U)
(declare-fun StartFuelAssert_Upperbounded_Lexicographic_Byte_Order._default.minimumOpt () T@U)
(declare-fun StartFuelAssert_Upperbounded_Lexicographic_Byte_Order._default.maximum () T@U)
(declare-fun StartFuel_Upperbounded_Lexicographic_Byte_Order._default.maximumOpt () T@U)
(declare-fun StartFuelAssert_Upperbounded_Lexicographic_Byte_Order._default.maximumOpt () T@U)
(declare-fun StartFuelAssert_BoundedPivotsLib._default.CutoffForLeft () T@U)
(declare-fun StartFuelAssert_BoundedPivotsLib._default.CutoffForRight () T@U)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $IsGoodHeap (T@U) Bool)
(declare-fun $IsHeapAnchor (T@U) Bool)
(declare-fun $IsAlloc (T@U T@U T@U) Bool)
(declare-fun |childIdx#0@@16| () Int)
(declare-fun |lambda#36| (T@U T@U T@U Bool) T@U)
(declare-fun null () T@U)
(declare-fun StartFuel_Sequences._default.NoDupes () T@U)
(declare-fun StartFuelAssert_Sequences._default.NoDupes () T@U)
(declare-fun StartFuel_Sequences._default.insert () T@U)
(declare-fun StartFuel_Sequences._default.replace1with2 () T@U)
(declare-fun StartFuel_Sequences._default.SeqIndexIterate () T@U)
(declare-fun StartFuel_Sequences._default.Unzip () T@U)
(declare-fun StartFuel_Sequences._default.FlattenShape () T@U)
(declare-fun StartFuelAssert_Sequences._default.FlattenShape () T@U)
(declare-fun StartFuel_Sequences._default.FlattenLength () T@U)
(declare-fun StartFuelAssert_Sequences._default.FlattenLength () T@U)
(declare-fun StartFuel_MapRemove_s._default.MapRemove1 () T@U)
(declare-fun StartFuelAssert_MapRemove_s._default.MapRemove1 () T@U)
(declare-fun StartFuel_Maps._default.MapRemove () T@U)
(declare-fun StartFuelAssert_Maps._default.MapRemove () T@U)
(declare-fun StartFuel_Maps._default.MapDisjointUnion () T@U)
(declare-fun StartFuel_Maps._default.MapUnionPreferA () T@U)
(declare-fun StartFuel_Maps._default.IMapUnionPreferA () T@U)
(declare-fun StartFuel_MsgHistoryMod.MsgHistory.LSNSet () T@U)
(declare-fun StartFuel_SeqComparison._default.lte () T@U)
(declare-fun StartFuel_Byte_Order._default.lte () T@U)
(declare-fun StartFuel_Byte_Order._default.ltedef () T@U)
(declare-fun StartFuelAssert_Byte_Order._default.ltedef () T@U)
(declare-fun StartFuel_Byte_Order._default.minimum () T@U)
(declare-fun StartFuel_Byte_Order._default.maximum () T@U)
(declare-fun StartFuel_Byte_Order._default.IsSorted () T@U)
(declare-fun StartFuelAssert_Byte_Order._default.IsSorted () T@U)
(declare-fun StartFuel_Byte_Order._default.IsStrictlySorted () T@U)
(declare-fun StartFuel_Lexicographic_Byte_Order._default.NotMinimum () T@U)
(declare-fun StartFuel_Lexicographic_Byte_Order._default.minimum () T@U)
(declare-fun StartFuel_Lexicographic_Byte_Order._default.maximum () T@U)
(declare-fun StartFuel_Lexicographic_Byte_Order._default.IsSorted () T@U)
(declare-fun StartFuelAssert_Lexicographic_Byte_Order._default.IsSorted () T@U)
(declare-fun StartFuel_Lexicographic_Byte_Order._default.IsStrictlySorted () T@U)
(declare-fun StartFuel_Upperbounded_Lexicographic_Byte_Order._default.NotMinimum () T@U)
(declare-fun StartFuel_Upperbounded_Lexicographic_Byte_Order._default.minimum () T@U)
(declare-fun StartFuel_Upperbounded_Lexicographic_Byte_Order._default.maximum () T@U)
(declare-fun StartFuel_Upperbounded_Lexicographic_Byte_Order._default.IsSorted () T@U)
(declare-fun StartFuelAssert_Upperbounded_Lexicographic_Byte_Order._default.IsSorted () T@U)
(declare-fun StartFuel_BoundedPivotsLib._default.CutoffForLeft () T@U)
(declare-fun StartFuel_BoundedPivotsLib._default.CutoffForRight () T@U)
(declare-fun StartFuel_DomainMod.Domain.SaneKeys () T@U)
(declare-fun Tclass._System.nat () T@U)
(declare-fun MapType6Select (T@U T@U T@U) T@U)
(declare-fun FieldType (T@T) T@T)
(declare-fun FieldTypeInv0 (T@T) T@T)
(declare-fun |b$reqreads#0@0| () Bool)
(declare-fun $f@@135!1760!8 () T@U)
(declare-fun $o@@205!1760!9 () T@U)
(declare-fun |i#2@@21!1758!45| () Int)
(declare-fun BoundedPivotsLib.__default.ElementIsKey (T@U) Bool)
(declare-fun |i#1@@74!1755!44| () Int)
(declare-fun |i#0@@184!1754!43| () Int)
(declare-fun |b$reqreads#10@0| () Bool)
(declare-fun |b$reqreads#9@0| () Bool)
(declare-fun |b$reqreads#8@0| () Bool)
(declare-fun |b$reqreads#7@0| () Bool)
(declare-fun |b$reqreads#6@0| () Bool)
(declare-fun |b$reqreads#5@0| () Bool)
(declare-fun |b$reqreads#4@0| () Bool)
(declare-fun |b$reqreads#3@0| () Bool)
(declare-fun |b$reqreads#2@0| () Bool)
(declare-fun |b$reqreads#1@0| () Bool)
(declare-fun PivotBetree.BetreeNode.Flush (T@U Int) T@U)
(declare-fun $f@@134!1797!42 () T@U)
(declare-fun $o@@204!1797!41 () T@U)
(declare-fun |i#15!1795!40| () Int)
(declare-fun |i#14!1792!39| () Int)
(declare-fun |i#13!1791!38| () Int)
(declare-fun $f@@133!1790!36 () T@U)
(declare-fun $o@@203!1790!37 () T@U)
(declare-fun DomainMod.Domain.SaneKeys (T@U T@U) Bool)
(declare-fun |DomainMod.Domain.WF#canCall| (T@U) Bool)
(declare-fun |i#12!1788!35| () Int)
(declare-fun |i#11!1785!34| () Int)
(declare-fun |i#10!1784!33| () Int)
(declare-fun $f@@132!1783!31 () T@U)
(declare-fun $o@@202!1783!32 () T@U)
(declare-fun |i#9!1780!30| () Int)
(declare-fun |i#8!1779!29| () Int)
(declare-fun |i#7!1776!28| () Int)
(declare-fun |Buffers.BufferStack.ApplyFilter#canCall| (T@U T@U) Bool)
(declare-fun DomainMod.Domain.KeySet (T@U) T@U)
(declare-fun |DomainMod.Domain.KeySet#canCall| (T@U) Bool)
(declare-fun Buffers.BufferStack.ApplyFilter (T@U T@U) T@U)
(declare-fun Buffers.BufferStack.BufferStack_q (T@U) Bool)
(declare-fun $f@@131!1775!27 () T@U)
(declare-fun $o@@201!1775!26 () T@U)
(declare-fun TISet (T@U) T@U)
(declare-fun Tclass.KeyType.Key () T@U)
(declare-fun $f@@130!1774!24 () T@U)
(declare-fun $o@@200!1774!25 () T@U)
(declare-fun $f@@129!1773!22 () T@U)
(declare-fun $o@@199!1773!23 () T@U)
(declare-fun |i#6@@1!1770!21| () Int)
(declare-fun |i#5@@0!1769!20| () Int)
(declare-fun $f@@128!1768!18 () T@U)
(declare-fun $o@@198!1768!19 () T@U)
(declare-fun |Buffers.__default.AllKeys#canCall| () Bool)
(declare-fun |ISet#Difference| (T@U T@U) T@U)
(declare-fun Buffers.__default.AllKeys () T@U)
(declare-fun $f@@127!1767!17 () T@U)
(declare-fun $o@@197!1767!16 () T@U)
(declare-fun $f@@126!1766!14 () T@U)
(declare-fun $o@@196!1766!15 () T@U)
(declare-fun |i#4@@3!1763!13| () Int)
(declare-fun |i#3@@12!1762!12| () Int)
(declare-fun $f@@125!1761!10 () T@U)
(declare-fun $o@@195!1761!11 () T@U)
(declare-fun |lambda#37| (T@U T@U T@U Bool) T@U)
(assert (not (= |##PivotBetree.BetreeNode.Nil| |##PivotBetree.BetreeNode.BetreeNode|))) ;; !QUANTIFIER-FREE!
(assert (= (type Tclass.PivotBetree.BetreeNode) TyType)) ;; !QUANTIFIER-FREE!
(assert (= (DatatypeCtorId |#PivotBetree.BetreeNode.Nil|) |##PivotBetree.BetreeNode.Nil|)) ;; !QUANTIFIER-FREE!
(assert (= (type Tclass.Upperbounded__Lexicographic__Byte__Order.Element) TyType)) ;; !QUANTIFIER-FREE!
(assert (= (type $LZ) LayerTypeType)) ;; !QUANTIFIER-FREE!
(assert (=> true (=> true (and (U_2_bool (Lit (bool_2_U (TotalKMMapMod.__default.TerminalValue (Lit TotalKMMapMod.__default.DefaultV))))) ($Is TotalKMMapMod.__default.DefaultV Tclass.ValueMessage.Message))))) ;; !QUANTIFIER-FREE!
(assert (= (type |out#0@@6|) DatatypeTypeType)) ;; !QUANTIFIER-FREE!
(assert (= (type this@@325) DatatypeTypeType)) ;; !QUANTIFIER-FREE!
(assert (= (type |keptBuffers#Z#0@0|) DatatypeTypeType)) ;; !QUANTIFIER-FREE!
(assert (= (type |movedBuffers#Z#0@0|) DatatypeTypeType)) ;; !QUANTIFIER-FREE!
(assert (= (type |##children#0@0|) (SeqType BoxType))) ;; !QUANTIFIER-FREE!
(assert (= (type |newChild#Z#0@0|) DatatypeTypeType)) ;; !QUANTIFIER-FREE!
(assert (= (type |##domain#0@0|) DatatypeTypeType)) ;; !QUANTIFIER-FREE!
(assert (= (type |let#3#0#0|) DatatypeTypeType)) ;; !QUANTIFIER-FREE!
(assert ($Is this@@325 Tclass.PivotBetree.BetreeNode)) ;; !QUANTIFIER-FREE!
(assert (INTERNAL_le_boogie 0 |childIdx#0@@16|)) ;; !QUANTIFIER-FREE!
(assert ($Is |out#0@@6| Tclass.PivotBetree.BetreeNode)) ;; !QUANTIFIER-FREE!
(assert (= 35 $FunctionContextHeight)) ;; !QUANTIFIER-FREE!
(assert (or |b$reqreads#0@0| (not (=> (and (= (type $o@@205!1760!9) refType) (= (type $f@@135!1760!8) (FieldType (FieldTypeInv0 (type $f@@135!1760!8)))) false) (U_2_bool (MapType6Select $_Frame@0@@0 $o@@205!1760!9 $f@@135!1760!8)))))) ;; !QUANTIFIER-FREE!
(assert (|PivotBetree.BetreeNode.CanFlush#canCall| this@@325 |childIdx#0@@16|)) ;; !QUANTIFIER-FREE!
(assert (PivotBetree.BetreeNode.CanFlush this@@325 |childIdx#0@@16|)) ;; !QUANTIFIER-FREE!
(check-sat)